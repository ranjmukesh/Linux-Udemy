# Connect remotely Linux Machine
  ssh -l ranjmukesh 192.168.44.139

Manage File from the Command Line:
Linux Filesystem: e.g. ext3, ext4, xfs: Linux Filesystem
                       NTFS, FAT -> Windows Filesystem

# Directory Listing Attribute:
[root@master udemy]# cd /
[root@master /]# ls -l
total 32
Type #ofLinks Ownner Group Size Month Day Time Name
lrwxrwxrwx.   1 root root    7 Jun 22  2021 bin -> usr/bin
dr-xr-xr-x.   5 root root 4096 Jan  3 15:33 boot
drwxr-xr-x.  20 root root 3300 Feb  7 22:44 dev
drwxr-xr-x. 158 root root 8192 Feb 26 09:43 etc
drwxr-xr-x.   3 root root   24 Jan 28 12:27 home
lrwxrwxrwx.   1 root root    7 Jun 22  2021 lib -> usr/lib
lrwxrwxrwx.   1 root root    9 Jun 22  2021 lib64 -> usr/lib64
drwxr-xr-x.   2 root root    6 Jan  4 12:14 lv1
drwxr-xr-x.   3 root root 4096 Jan  4 12:17 lv2
drwxr-xr-x.   2 root root    6 Jun 22  2021 media
drwxr-xr-x.   3 root root   18 Jun 22  2021 mnt
drwxr-xr-x.   3 root root   24 Jan 28 12:21 opt
dr-xr-xr-x. 305 root root    0 Feb  7 22:44 proc
drwxrwxrwx.   4 root root   34 Jan  3 21:42 rajouri   
dr-xr-x---.  25 root root 4096 Feb 26 10:25 root
drwxr-xr-x.  49 root root 1500 Feb 26 09:43 run
lrwxrwxrwx.   1 root root    8 Jun 22  2021 sbin -> usr/sbin
drwxr-xr-x.   2 root root    6 Jun 22  2021 srv
dr-xr-xr-x.  13 root root    0 Feb  7 22:44 sys
drwxrwxrwt.  25 root root 4096 Feb 26 10:42 tmp
drwxrwxrwx.   4 root root   43 Jan 28 22:46 u01
drwxr-xr-x.  13 root root  158 Jan  3 15:16 usr
drwxr-xr-x.  23 root root 4096 Jan  8 12:15 var

#Creating Files and Directories
  whoami
  pwd
  touch jerry
  cp jerry lex
  vi homer
  touch bart lisa marge
  
  mkdir seinfeld
  mkdir superman simpson

#File Maintenance Commands:
  cp
  rm
  mv
  mkdir
  rmdir or rm -r or rm -rf
  chgrp
  chown
  
  e.g.
  cp george david
  echo "david puddy is Elian's boy friend" > david
  cat david
    david puddy is Elian's boy friend
  cp david /tmp
  cat /tmp/david
    david puddy is Elian's boy friend
  rm apoho
  mv lex luther
  mv david puddy
  mv puddy /tmp
  mkdir gameofthrone
  rmdir gameofthrone
  rm -r gameofthrone
  chgrp ranjmukesh jerry  # -rw-r--r--. 1 root root    0 Feb 26 10:50 jerry
    -rw-r--r--. 1 root ranjmukesh    0 Feb 26 10:50 jerry
  chown ranjmukesh jerry
    -rw-r--r--. 1 ranjmukesh ranjmukesh    0 Feb 26 10:50 jerry  
  chown ranjmukesh:ranjmukesh george  # -rw-r--r--. 1 root       root          0 Feb 26 10:52 george
    -rw-r--r--. 1 ranjmukesh ranjmukesh    0 Feb 26 10:52 george

# Soft Link & Hard Link (Sort-cut)
  -> inode : Pointer or number of a file on the hard disk
  -> Soft Link : Link will be removed if file is removed or renamed
  -> Hard Link : Deleting, removing or moving the original file will not affect the hard link
  ln -- use to create hard link
  ln -s  -- use to create soft link
  
  e.g.  Soft Link
  [root@master udemy]# pwd
  /root/udemy
  [root@master udemy]# ls -lrt hulk
  -rw-r--r--. 1 root root 0 Feb 26 11:21 hulk
  cd /tmp
  ls -s /root/udemy/hulk
  [root@master tmp]# ls -li --> inode
  total 8
  17120453 -rw-r--r--. 1 root root 34 Feb 26 11:02 david
  17713745 -rw-r--r--. 1 root root  0 Feb 26 11:25 hulk
   3782511 -rw-r--r--. 1 root root 34 Feb 26 11:01 puddy
  [root@master tmp]# ls -lrti  --> inode
  total 8
   3782511 -rw-r--r--. 1 root root 34 Feb 26 11:01 puddy
  17120453 -rw-r--r--. 1 root root 34 Feb 26 11:02 david
  17713745 -rw-r--r--. 1 root root  0 Feb 26 11:25 hulk

  #Hard Link
  [root@master udemy]# touch hulk
  [root@master udemy]# echo "hulk is a super hero"> hulk
  [root@master udemy]# cat hulk
  hulk is a super hero
  
  [root@master tmp]# ln /root/udemy/hulk
  [root@master tmp]# ls -lrt
  total 4
  -rw-r--r--. 2 root root 21 Feb 26 11:32 hulk
  [root@master tmp]# cat hulk
  hulk is a super hero

  [root@master udemy]# echo "123" >> hulk
  [root@master udemy]# cat hulk
  hulk is a super hero
  123
  
  [root@master tmp]# cat hulk
  hulk is a super hero
  123
  
  [root@master udemy]# rm hulk
  rm: remove regular file 'hulk'? y
  [root@master udemy]# ls -lrt hulk
  ls: cannot access 'hulk': No such file or directory
  
  [root@master tmp]# ls -rtl
  total 4
  -rw-r--r--. 1 root root 25 Feb 26 11:35 hulk
  [root@master tmp]# cat hulk
  hulk is a super hero
  123
  
# Input & Output Redirectories
  There are 2 redirects in Linux
    1) Standard input (stdin) and it has file descriptor number as 0
    2) Standard output (stdout) and it has file descriptor number as 1
    3) Standard error (stderr) and it has file descriptor numnber as 2

# Output (stdout) - 1
  -> By default when running a command its output goes to the terminal
  -> The output of a command can be routed to a file using > symbol
      e.g.  ls -l > listings
            pwd > findpath
  -> If using the same file for additional output or to append to the same file then use >>
      e.g.  ls -la >> listings
            echo "Hello World" >> findpath
            
# Input (stdin) - 0
   -> Input is used when feeding file contents to afile
    e.g.  cat < listings
          mail -s "Office memo" allusers@abc.com < memoletter
          
          [root@master tmp]# cat < findpath
          /tmp
          Hello World
          
# Error (stderr) - 2
  -> When a command is executed we use a keyboard and that is alos considered (stdin - 0)
  -> That command output goes on the monitor and that output is (stdout - 1)
  -> If the command produced any error on the screen then it is considered (stderr - 2)
      - We can use redirects to route errors from the screen
        e.g.  ls -l /root 2> errorfile
              telnet localhost 2> errorfile
              
        [ranjmukesh@master ~]$ ls -l /root/
        ls: cannot open directory '/root/': Permission denied
        
        [ranjmukesh@master ~]$ ls -l /root 2> errorfile
        [ranjmukesh@master ~]$ cat errorfile
        ls: cannot open directory '/root': Permission denied
        
        [ranjmukesh@master ~]$ telnet localhost1
        telnet: localhost1: Name or service not known
        localhost1: Unknown host
        [ranjmukesh@master ~]$ telnet localhost1 2> errortelnetfile
        [ranjmukesh@master ~]$ cat errortelnetfile
        telnet: localhost1: Name or service not known
        localhost1: Unknown host
        
# PIPES
  -> A pipe is used by the shell to connect the output of one command directly to the input to another command.
      [ranjmukesh@master etc]$ ls -lrt | more
      Press Specebar to move next page of output
      
      [ranjmukesh@master etc]$ ls -l | tail -1
      drwxr-xr-x.  2 root root      4096 Feb  7 21:01 yum.repos.d
      [ranjmukesh@master etc]$ ls -l | tail -10
      -rw-r--r--.  1 root root       642 Dec  9  2016 xattr.conf
      drwxr-xr-x.  7 root root       133 Jan 10 20:13 xdg
      -rw-------.  1 root root      1001 Nov  9  2019 xinetd.conf
      drwxr-xr-x.  2 root root       230 Jan  4 14:46 xinetd.d
      drwxr-xr-x.  3 root root        36 Jan  3 14:37 xml
      -rw-r--r--.  1 root root       501 May 14  2019 yp.conf
      -rw-r--r--.  1 root root      1775 May 14  2019 ypserv.conf
      drwxr-xr-x.  2 root root        57 Jan  3 15:19 yum
      lrwxrwxrwx.  1 root root        12 Sep 17 23:05 yum.conf -> dnf/dnf.conf
      drwxr-xr-x.  2 root root      4096 Feb  7 21:01 yum.repos.d

  



  




    
    
  
  



